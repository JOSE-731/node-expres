Para instalar dependencia de buenas practicas:npm i nodemon eslint eslint-config-prettier eslint-plugin-prettier prettier -D

Instalamos express: npm i express, ya con esto express queda instalado y podemos crear nuestro servidor

API Restful.
REST: Representational State Transfer
Es una convención que comúnmente se utiliza para desarrollar servicios web, que al final se comunican por el 
protocolo HTTP.

Este protocolo tiene varios métodos:

El método GET
PUT
PUSH (Son hermanitos)
POST
DELETE.

La convención de REST nos dice que por cada casi entidad que tengamos tendremos una ruta, 
un endpoint con un nombre, y también deberíamos tener un id por cada producto.

Si queremos obtener la lista de productos usaremos el método GET con la ruta de productos.
Sí queremos una ruta en particular repetimos el endpoint, pero esta vez enviamos el id.

PUT, podríamos usar Replace y modificar una lista entera (mala práctica), lo ideal es usarlo con un solo producto
PATCH, podemos hacer una actualización mucho más detalladas, de que cosas quiero modificar.
POST, nos sirve para crear.
DELETE, no deberíamos eliminar en masa, es muy peligroso, ideal es eliminar uno a uno

Los endpoints son las URLs de un API o un backend que responden a una petición. Los mismos entrypoints 
tienen que calzar con un endpoint para existir. Algo debe responder para que se renderice un sitio con sentido para el visitante.

Resumen de la clase:
Concepto
Los servicios es donde encapsulamos todos los casos de usos y comenzar a interactuar con la lógica de negocio.
En el caso de una tienda: hacer compras, transacciones, etc.
.
Estructura
Esta arquitectura está definida por capas.
Entidades:

En esta capa encontramos las entidades base del negocio.
En nuestro caso: productos, categorías, órdenes de compra.
Casos de uso

En esta capa tenemos lo relacionado a la lógica de negocio
En esta capa se encuentra los servicios
Controladores

En esta capa se brinda el acceso.
Aquí encontramos el routing
.

Flujo de trabajo:

Controladores: Encontramos los routes y middlewares.
Los controladores acceden a la capa de servicios
Servicios: donde se encuentra la lógica de negocio
Los servicios usan las librerías.
Las librerías se encargan de contactarse a la capa de entidades
Las librerías se contactan a otras fuentes de datos: API externa o base de datos.

Un middleware es un bloque de código que se ejecuta entre la petición que hace el usuario (request) 
hasta que la petición llega al servidor. Este funciona de forma secuencial

docker-compose up -d postgres: Este comnado levanta el servicio de nuestra imagen en docker
docker-compose ps: Muestra todos los procesos que se estan ejecutando
docker-compose down: Mata todos los servicios
docker-compose exec postgres bash:Nos conectamos a nuestra imagen o contenedor por linea de comando
psql -h localhost -d my_store -U admin: Para entrar a la base de datos
\d+:Muestra la estructura de la DB
\q:Salir de la DB
wsl --shutdown: Para apagar servicios de Docker
pool: Un pool de conexiones es un conjunto limitado de conexiones a una base de datos, que es manejado por un servidor de aplicaciones de forma tal, que dichas conexiones pueden ser reutilizadas por los diferentes usuarios.
Otra definicion de pool seria: Tener varias conexiones reutilizando una sola

Orm: Modelo de programacion que nos permite mapear las estructuras de la base de datos, este
nos permitirá acelerar el desarrollo de la aplicación evitando la escritura repetitiva de código para ejecutar operaciones CRUD.

Sequelize : Orm de node js que nos permitirá gestionar mejor nuestra base de datos que tengamos en nuestra aplicacion
este se instala con: npm install --save sequelize

importante dependiendo de la base de datos: este pedira la instalacion de unos driver :

$ npm install --save pg pg-hstore # Postgres
$ npm install --save mysql2
$ npm install --save mariadb
$ npm install --save sqlite3
$ npm install --save tedious # Microsoft SQL Server
$ npm install --save oracledb # Oracle Database

Migraciones: Es como un sistema de control de versiones para manejar los cambios desde el código y trackear los cambios en la base de datos. - Sequelize.
Para trabajar las migraciones Sequelize tiene una libreria que se instala: npm sequelize-cli dev
